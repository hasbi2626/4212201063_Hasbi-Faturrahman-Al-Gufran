import pandas as pd
from sklearn import svm
from sklearn.model_selection import LeaveOneOut
from sklearn.metrics import accuracy_score, confusion_matrix, precision_score, f1_score
from skimage.feature import hog
import numpy as np
import matplotlib.pyplot as plt
from tqdm import tqdm

# Memuat dataset EMNIST
data = pd.read_csv('C:/Users/Asus/Downloads/archive/emnist-bymerge-train-1000.csv')

# Mengambil label dan piksel
X = data.iloc[:, 1:].values  # Mengambil semua kolom kecuali yang pertama
y = data.iloc[:, 0].values    # Mengambil kolom pertama sebagai label

# Mengonversi label ke tipe integer jika perlu
y = y.astype(int)

# Ekstraksi Fitur HOG
def extract_hog_features(images):
    hog_features = []
    for image in images:
        image = image.reshape((28, 28))  # Mengubah bentuk piksel ke 28x28
        hog_feature = hog(image, orientations=9, pixels_per_cell=(8, 8), cells_per_block=(2, 2), block_norm="L2-Hys")
        hog_features.append(hog_feature)
    return np.array(hog_features)

X_hog = extract_hog_features(X)

# Klasifikasi dengan SVM
clf = svm.SVC(kernel='linear', C=1)

# Evaluasi dengan Leave-One-Out Cross-Validation
loo = LeaveOneOut()
y_true, y_pred = [], []

print("Performing LOOCV...")
for train_index, test_index in tqdm(loo.split(X_hog), total=len(X_hog)):
    X_train, X_test = X_hog[train_index], X_hog[test_index]
    y_train, y_test = y[train_index], y[test_index]
    
    clf.fit(X_train, y_train)
    y_pred.append(clf.predict(X_test)[0])
    y_true.append(y_test[0])

# Evaluasi Kinerja Model
accuracy = accuracy_score(y_true, y_pred)
precision = precision_score(y_true, y_pred, average='weighted')
f1 = f1_score(y_true, y_pred, average='weighted')
conf_matrix = confusion_matrix(y_true, y_pred)

print("Accuracy:", accuracy)
print("Precision:", precision)
print("F1 Score:", f1)

# Plot confusion matrix
plt.figure(figsize=(10, 10))
plt.imshow(conf_matrix, interpolation='nearest', cmap=plt.cm.Blues)
plt.title("Confusion Matrix")
plt.colorbar()
plt.show()
